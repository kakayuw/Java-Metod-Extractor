void init(ProcessingEnvironment processingEnv){	    super.init(processingEnv);	    trees = Trees.instance(processingEnv);	}
boolean process(final Set<? extends TypeElement> types,final RoundEnvironment environment){	    System.out.println(trees.getClass().getName());	    if (!environment.processingOver()) {	        for (final Element element : environment.getRootElements()) {	            TreePath tp = this.trees.getPath(element);	            scanner.scan(tp, this.trees);	            MethodScanner methodScanner = new MethodScanner();	            List<MethodTree> methodTrees = methodScanner.scan(tp, this.trees);	            for (MethodTree mt : methodTrees) {	                if (mt.getReturnType() == null) continue;	                System.out.print("" + mt.getReturnType() + " " + mt.getName() + "(" + mt.getParameters() + ")");	                System.out.println("" + mt.getBody());	                System.out.println("################################################");	            }	        }	    }	    return true;	}
